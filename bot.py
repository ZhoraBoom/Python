import telebot
import config
import lxml
import pandas
from PIL import Image
import requests
from bs4 import BeautifulSoup as BS
from telebot import types

# parsing and processing data to the dictionary
r = requests.get("https://ru.wikipedia.org/wiki/–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π_—Å–±–æ—Ä–Ω–æ–π_–†–æ—Å—Å–∏–∏_–ø–æ_—Ñ—É—Ç–±–æ–ª—É#–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞_–∫_—Ç—É—Ä–Ω–∏—Ä—É")
soup = BS(r.content, 'lxml')
new = soup.find('table').find_all('tr')
dict = {}
# iteration by string in table
for item in new:
    x = item.find_all('td')
    word = 'regs'
    list = []
    i = 0
    # iteration by column in string
    for y in x:
        if i != 0:
            if y.get_text(strip=True) != '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –º–∞—Ç—á–∞—Ö' and y.get_text(strip=True) != '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –º–∞—Ç—á–µ':
                list.append(y.get_text(strip=True))
        else:
            if y.get_text(strip=True) != '–°–µ—Ä–±–∏—è(–Æ–≥–æ—Å–ª–∞–≤–∏—è)':
                word = y.get_text(strip=True)
            else:
                word = '–°–µ—Ä–±–∏—è'
            i += 1
    dict[word] = list

bot = telebot.TeleBot(config.TOKEN)


# command to start: sticker and message
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAN8Y4ibiKIFp7Z-PzIcDE2TqKVh2KcAAkoJAAJ5XOIJbIauOPX8g6grBA')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –ø—É—Ç–Ω–∏–∫!')


# command to help: message only
@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, config.instructions)


# command to answer to request
@bot.message_handler(commands=['request'])
def request_message(message):
    # creating Keyboard of options which appears in your window of Keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–≤–æ—Ä–∏—Ç–∞")
    item2 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–≥—Ä")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–µ–±—è –ø—Ä–∏–≤–µ–ª–æ –∫–æ –º–Ω–µ?', reply_markup=markup)


# processing simple message
@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text == "–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–≤–æ—Ä–∏—Ç–∞":
        # creating Keyboard which binds with my message, you can choose option
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton('–ò—Å–ø–∞–Ω–∏—è üá™üá∏', callback_data='good', )
        item2 = types.InlineKeyboardButton('–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞ üá¶üá∑', callback_data='bad')
        item3 = types.InlineKeyboardButton("–§—Ä–∞–Ω—Ü–∏—è üá´üá∑", callback_data='norm')
        item4 = types.InlineKeyboardButton("–ë—Ä–∞–∑–∏–ª–∏—è üáßüá∑", callback_data='boy')
        item5 = types.InlineKeyboardButton("–ê–Ω–≥–ª–∏—è üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø", callback_data='joy')
        item6 = types.InlineKeyboardButton("–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è üáµüáπ", callback_data='boom')
        markup.add(item1, item2, item3, item4, item5, item6)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–µ —Å –ß–ú —Ç—ã —Å–∏–º–ø–∞—Ç–∏–∑–∏—Ä—É–µ—à—å.', reply_markup=markup)
    elif message.text == "–£–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–≥—Ä":
        bot.send_message(message.chat.id, '–° –∫–∞–∫–æ–π —Å–±–æ—Ä–Ω–æ–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç—á–µ–π —Å–±–æ—Ä–Ω–æ–π –†–æ—Å—Å–∏–∏? –ù–∞–ø–∏—à–∏ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–±–æ—Ä–Ω–æ–π —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã.')
    else:
        # checking country in list
        if message.text in dict.keys():
            list = dict[message.text]
            matches = list[0]
            wins = list[1]
            draws = list[2]
            loses = list[3]
            difference = list[6]
            bot.send_message(message.chat.id, f'–í—Å–µ–≥–æ –º–µ–∂–¥—É —Å–±–æ—Ä–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω –†–æ—Å—Å–∏—è –∏ {message.text} –±—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ (–º–∞—Ç—á–µ–π: {matches}) —Å –æ–±—â–µ–π —Ä–∞–∑–Ω–∏—Ü–µ–π –∑–∞–±–∏—Ç—ã—Ö –∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –º—è—á–µ–π {difference}.')
            str = '–°–±–æ—Ä–Ω–∞—è –†–æ—Å—Å–∏–∏ '
            if wins != '0':
                str += f'–æ–¥–µ—Ä–∂–∞–ª–∞ –ø–æ–±–µ–¥: {wins}, '
            if draws != '0':
                if (draws != '2' and draws != '3') and draws != '4':
                    str += f'—Å—ã–≥—Ä–∞–ª–∞ –≤–Ω–∏—á—å—é {draws} —Ä–∞–∑, '
                else:
                    str += f'—Å—ã–≥—Ä–∞–ª–∞ –≤–Ω–∏—á—å—é {draws} —Ä–∞–∑–∞, '
            if loses != '0':
                str += f'–∞ —Ç–∞–∫–∂–µ –ø–æ—Ç–µ—Ä–ø–µ–ª–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–π: {loses}.'
            if str[-2] == ',':
                str = str[0:-2] + '.' + str[-1]
            bot.send_message(message.chat.id, str)
        else:
            bot.send_message(message.chat.id, '–í –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∞–∫–æ–µ(((')
            bot.send_sticker(message.chat.id, config.SVIN)


# processing answer in inline Keyboard
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, 'FURIAAAAAAA ROJA', )
                bot.send_photo(call.message.chat.id, Image.open(r'spain.webp'))
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, 'LA ALBISELENTEEEE')
                bot.send_photo(call.message.chat.id, Image.open(r'argentina.jpg'))
            elif call.data == 'norm':
                bot.send_message(call.message.chat.id, 'GREENOUILLE')
                bot.send_photo(call.message.chat.id, Image.open(r'france.jpg'))
            elif call.data == 'boy':
                bot.send_message(call.message.chat.id, 'A SELECAOOOOOO')
                bot.send_photo(call.message.chat.id, Image.open(r'brazil.jpg'))
            elif call.data == 'joy':
                bot.send_message(call.message.chat.id, 'THREE LIONS')
                bot.send_photo(call.message.chat.id, Image.open(r'england.webp'))
            elif call.data == 'boom':
                bot.send_message(call.message.chat.id, 'PASTEIS')
                bot.send_photo(call.message.chat.id, Image.open(r'portugal.jpg'))


            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                text='–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–µ —Å –ß–µ–º–ø–∏–æ–Ω–∞—Ç–∞ –ú–∏—Ä–∞ —Ç—ã —Å–∏–º–ø–∞—Ç–∏–∑–∏—Ä—É–µ—à—å.', reply_markup=None)
            bot.answer_callback_query(chat_id=call.message.chat.id, show_alert=False, text='—Ç–µ—Å—Ç')
    except Exception as e:
        print(repr(e))


# bot.polling(none_stop=True)
bot.polling(none_stop=True)
